{"version":3,"sources":["paginas/NotFound.js","componentes/entryWords.js","componentes/visualSopa.js","paginas/Principal.js","paginas/Navegacion.js","index.js"],"names":["NotFound","to","Button","Principal","props","useState","palabras","setPalabras","entrada","e","aux","parseInt","target","name","value","listaPalabras","map","item","i","Input","placeholder","onChange","maxLength","Container","fluid","Row","Col","sm","size","offset","onClick","arrayPalabras","VisualSopa","arrayMostrar","setArrayMostrar","arrayMayor","Array","ii","length","fill","console","log","lista","randomGenerator","est","min","max","Math","round","random","floor","sopa","item2","j","style","textTransform","color","className","xs","md","Table","dark","bordered","List","matrizPrincipal","matriz","indexRandom","indexActual","combinar","matrizLetras","numRandom22","cont","alert","kk","numRandom4","splice","activeTab","setActiveTab","words","setWords","setMatriz","toggle","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","array","matrizAux","split","href","Navegacion","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d27bfa8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {  Button } from 'reactstrap';\n\nfunction NotFound() {\n  return (<div>\n    <Link to=\"/\"><Button>Ir a sopa de letras</Button></Link>\n\n  </div>);\n}\n\nexport default NotFound;\n","\nimport React, { useState } from 'react';\nimport { Input, Button, Row, Col,Container } from 'reactstrap';\nimport classnames from 'classnames';\nimport '../estilos/Principal.css';\n\nfunction Principal(props){\n\n  const [palabras, setPalabras] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",]);\n\n\n  const entrada=(e)=>{\n    const aux=palabras\n    aux[parseInt(e.target.name)]=e.target.value\n    setPalabras(aux)\n  }\n\n  const listaPalabras=palabras.map((item,i)=>\n  <div key={i}>\n    <br/>\n    <Input name={i} placeholder=\"Ingresar palabra\" key={i} onChange={entrada} maxLength=\"10\"></Input>\n  </div>\n  )\n\n  return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col sm=\"12\">\n\n              <h3>A continuación ingresar las palabras para la sopa de letras: </h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n\n              {listaPalabras}\n            </Col>\n          </Row>\n          <br/>\n          <Row>\n            <Col sm={{size:6, offset:6}}>\n\n              <Button onClick={()=>props.arrayPalabras(palabras)}>Guardar</Button>\n            </Col>\n          </Row>\n        </Container>\n\n    </div>\n  );\n}\n\nexport default Principal;\n","\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Table, List, Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport '../estilos/Principal.css';\n\nfunction VisualSopa(props){\n\n  const [arrayMostrar,setArrayMostrar]=useState([[]])\n\n  let letras=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"ñ\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n  let arrayMayor=new Array(20)\n  for (let ii = 0; ii < arrayMayor.length; ii++) {\n    arrayMayor[ii] = new Array(20);\n    arrayMayor[ii].fill(\"\", 0, 19);\n  }\n  console.log(arrayMayor)\n\n  const lista=props.arrayPalabras.map((item,i)=>\n    <div key={i}>\n      <li>{item}</li>\n    </div>\n  )\n\n  const randomGenerator=(est, min, max)=>{\n    if(est){\n      return Math.round(Math.random())\n    }else{\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n  }\n\n  const combinar=(matriz)=>{\n    let indexActual = matriz.length,  indexRandom;\n\n    while (0 !== indexActual) {\n\n      indexRandom = Math.floor(Math.random() * indexActual);\n      indexActual--;\n      [matriz[indexActual], matriz[indexRandom]] = [\n        matriz[indexRandom], matriz[indexActual]];\n    }\n\n    return matriz;\n  }\n\n  const handleRandom=()=>{\n    const matrizPrincipal=combinar(props.matrizLetras)\n\n\n    const numRandom22=randomGenerator(true,0,1)\n    let cont=0\n    matrizPrincipal.map((item,i)=>{\n      item.length>0?cont=cont+1:cont=cont\n    })\n    console.log(cont)\n    if(cont<20){\n      alert(\"no se han introducido todas las palabras\")\n    }else{\n      for (let kk = 0; kk < 20; kk++) {\n        const numRandom4=randomGenerator(false,1,5)\n        if(numRandom22===1){\n          if(kk<3){\n\n            //vertical\n            arrayMayor.map((item,i)=>{\n              item.splice(kk, 1, matrizPrincipal[kk][i-numRandom4-numRandom22*5]);\n            })\n          }\n          else if(kk>18){\n            //diagonal\n            matrizPrincipal[kk].map((item,i)=>{\n              arrayMayor[i].splice(i+numRandom4+numRandom22*5, 1, item);\n            })\n          }else{\n            //horizontal\n            matrizPrincipal[kk].map((item,i)=>{\n              arrayMayor[kk].splice(i+numRandom4+numRandom22*5, 1, item);\n            })\n          }\n\n        }else{\n          if(kk<3){\n\n            //vertical\n            arrayMayor.map((item,i)=>{\n              item.splice(kk, 1, matrizPrincipal[kk][i-numRandom4-numRandom22*5]);\n            })\n          }else if(kk>18){\n            //diagonal\n            matrizPrincipal[kk].map((item,i)=>{\n              arrayMayor[i].splice(i+numRandom4+numRandom22*5, 1, item);\n            })\n          }else{\n            //horizontal\n            matrizPrincipal[kk].map((item,i)=>{\n              arrayMayor[kk].splice(i+numRandom4+numRandom22*5, 1, item);\n            })\n          }\n        }\n\n\n      }\n      console.log(\"final: \",arrayMayor)\n      setArrayMostrar(arrayMayor)\n    }\n  }\n\n\n\n  const sopa=arrayMostrar.map((item,i)=>\n      <tr key={i}>\n        {item.map((item2,j)=>\n            <td key={j} >{item2==\"\"||typeof(item2)==\"undefined\"?<p>{\"-\"/*letras[Math.floor(Math.random()*letras.length)]*/}</p>:<p style={{textTransform:\"uppercase\", color:\"red\"}}>{item2}</p>}</td>\n        )}\n      </tr>\n    )\n\n  return (\n      <div className=\"contenedor\">\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\" md=\"8\">\n              <Table dark bordered>\n                  <tbody>\n                    {sopa}\n                  </tbody>\n                </Table>\n            </Col>\n            <Col xs=\"12\" md=\"4\">\n              <Row>\n                <Col>\n                  <List>\n                    <ul>\n                      {lista}\n                    </ul>\n                  </List>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button onClick={handleRandom} size=\"lg\">\n                    Random\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n        </Container>\n\n    </div>\n  );\n}\n\nexport default VisualSopa;\n","\nimport React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport '../estilos/Principal.css';\nimport EntryWords from '../componentes/entryWords'\nimport VisualSopa from '../componentes/visualSopa'\n\nfunction Principal(props){\n\n  const [activeTab, setActiveTab] = useState('1');\n  const [words,setWords]=useState([]);\n  const [matriz,setMatriz]=useState([[]])\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  const recibirWords= (array)=>{\n    console.log(array)\n    setWords(array)\n    let matrizAux=[[]]\n    array.map((item,i)=>matrizAux[i]=item.split(\"\"))\n    console.log(matrizAux)\n    setMatriz(matrizAux)\n  }\n\n  return (\n      <div className=\"contenedor\">\n      <br/>\n      <h5>A continuación ingresa a la casilla de entrada de datos para regsitrar las 20 palabras que se colocaran en la sopa de letras.\n      Hecho esto cliqueas en guardar y pasas a la ventana de \"sopa de letras\", donde verás el listado de tus palabras, luego presionas\n      \"Random\" y se establecera la sopa de letras.</h5>\n      <br/>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n          >\n            Entrada de palabras\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle('2'); }}\n          >\n            Sopa de letras\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <EntryWords arrayPalabras={recibirWords}/>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <VisualSopa arrayPalabras={words} matrizLetras={matriz}/>\n        </TabPane>\n      </TabContent>\n      <br/>\n      <Row>\n        <Col>\n          <a href=\"https://bifrost-apps.com\">Desarrollado por Edgar Stiven Díaz Roa</a>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Principal;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport Principal from './Principal';\n\n\nexport default function Navegacion (){\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Principal} />\n          <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n\n    );\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Navegacion from './paginas/Navegacion';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navegacion />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}